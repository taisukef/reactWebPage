{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Form","className","onSubmit","this","props","handleSubmit","Grid","container","spacing","item","xs","align","TextField","label","input","name","type","min","max","Button","variant","color","React","Component","Todo","link","done","todo","priority","href","onClick","e","preventDefault","deleteTodo","setTodoStatus","TodoList","todos","map","key","id","App","state","numberOfTodos","length","targetValue","nowTargetValue","value","target","setState","message","viewPriority","clickTodo","slice","push","newTargetValue","splice","i","alert","setTargetValue","resetSubmit","bind","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.20162f49.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n//import Divider from \"@material-ui/core/Divider\";\n//import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n//import TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n//import Paper from '@material-ui/core/Paper';\n\nclass Form extends React.Component{\n    render(){\n      return(\n        <div className=\"form\">\n          <form onSubmit={this.props.handleSubmit}>\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <div align=\"right\">\n                  <TextField label=\"ToDo\" input name=\"todo\" type=\"text\" />\n                </div>\n              </Grid>\n              <Grid item xs={6}></Grid>\n              <Grid item xs={6}>\n                <div align=\"right\">\n                  <TextField label=\"priority\" input name=\"priority\" type=\"number\" min=\"1\" max=\"10\" />\n                </div>\n              </Grid>\n              <Grid item xs={6}>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">確定</Button>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      )\n    }\n}\n\nclass Todo extends React.Component {\n  render(){\n    const className ='undone'\n    const link = this.props.done ? '削除' : '完了！'\n    return(\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <div align=\"center\">\n            {this.props.todo} \n          </div>\n        </Grid>\n        <Grid item xs={4}>\n          <div align=\"center\">{this.props.priority} </div>\n        </Grid>\n        <Grid item xs={4}>\n          <div align=\"center\"><a href=\"\" onClick={(e) => {e.preventDefault(); this.props.done ? this.props.deleteTodo(this.props) : this.props.setTodoStatus(this.props)}}>{link}</a></div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nclass TodoList extends React.Component {\n  render(){\n\n    const todos = this.props.todos.map( todo =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        setTodoStatus={this.props.setTodoStatus}\n        deleteTodo={this.props.deleteTodo}\n      />\n    )\n\n    return(\n\n      <ul>\n        {todos}\n      </ul>\n    );\n  }\n}\n\nclass App extends React.Component{\n\n  handleInput({ target: {value} }) {\n    this.setState({\n      value\n    });\n  }\n\n  send() {\n      const { value, priority } = this.state;\n      this.setState({\n        todo: '',\n        priority: '',\n        message: value,\n        viewPriority: priority\n      });\n  }\n\n  setTodoStatus(clickTodo){\n    const todos = this.state.todos.slice();\n    const todo = todos[clickTodo.id - 1];\n    todo.done = !todo.done;\n    todos[clickTodo.id - 1] = todo;\n\n    this.setState({ todos });\n  }\n\n  constructor(props){\n    super(props);\n\n    const todos = [\n      {\n        id: 1,\n        todo: 'webアプリ作成',\n        priority: '10',\n        done: false\n      }\n    ]\n\n   \n    \n\n    this.state = ({\n      todos: todos,\n      numberOfTodos: todos.length + 1,\n      targetValue: 30,\n      nowTargetValue: 0\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    const todo = e.target.todo.value;\n    const priority = e.target.priority.value;\n    const todos = this.state.todos.slice();\n    const numberOfTodos = this.state.numberOfTodos;\n\n    todos.push({\n      id: numberOfTodos,\n      todo: todo,\n      priority: priority,\n      done: false\n    });\n\n    this.setState({ todos});\n    this.setState({ numberOfTodos: numberOfTodos + 1 });\n\n    e.target.todo.value = '';\n    e.target.priority.value = '';\n  }\n\n  resetSubmit(e){\n    e.preventDefault()\n    this.setState({nowTargetValue: 0})\n  }\n\n  setTargetValue(e){\n    e.preventDefault()\n    //console.log(e.target.value)\n    this.setState({targetValue: e.target.newTargetValue.value});\n  }\n\n  deleteTodo(clickTodo){\n    const todos = this.state.todos.slice();\n    var nowTargetValue = this.state.nowTargetValue;\n\n    //console.log(todos)\n\n    const num = todos[clickTodo.id -1 ].priority - 0;\n\n    nowTargetValue += num;\n\n    todos.splice((clickTodo.id - 1),1);\n\n    //console.log(todos.length)\n\n    for (let i = clickTodo.id - 1; i < todos.length;i++){\n      todos[i].id = i + 1 ;\n    };\n\n    //console.log(todos)\n\n    this.setState({ todos });\n    this.setState({numberOfTodos: todos.length + 1});\n\n    if(this.state.targetValue <= nowTargetValue){\n      alert('目標達成おめでとう！自分自身に何かご褒美をあげましょう');\n      nowTargetValue = 0;\n    }\n\n    this.setState({nowTargetValue});\n\n  }\n\n  render()\n  {\n    return (\n      <div className=\"app\">\n        <Grid container spacing={3}>\n          \n          <Grid item xs={12}>\n            <div align=\"center\">\n              <h1>To Do List</h1>\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <div align=\"center\">\n              あなたの目標値は{this.state.targetValue}です。<br />\n            </div>\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n          <form onSubmit={e => this.setTargetValue(e)}>\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <div align=\"right\">\n                <TextField label=\"目標値を入力\" input name=\"newTargetValue\" type=\"number\" />\n              </div>\n            </Grid>\n            <Grid item xs={6}>\n              <div align=\"left\">\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">変更</Button>\n              </div>\n            </Grid>\n            </Grid>\n          </form>\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <div align=\"center\">\n              現在の達成値は{this.state.nowTargetValue}です。<br />\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <form onSubmit={e => this.resetSubmit(e)}>\n            <div align=\"center\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">リセット</Button>\n            </div>\n            </form>\n          </Grid>\n        </Grid>\n        <Form handleSubmit={this.handleSubmit.bind(this)} />\n\n        <Grid container spacing={3}>\n        <Grid item xs={4}>\n        <div align=\"center\">\n          Todo\n        </div>\n        </Grid>\n        <Grid item xs={4}>\n          <div align=\"center\">\n            priority\n          </div>\n        </Grid>\n        <Grid item xs={4}>\n          <div align=\"center\">\n            status\n          </div>\n        </Grid>\n      </Grid>\n\n        <TodoList\n        todos={this.state.todos}\n        setTodoStatus={this.setTodoStatus.bind(this)} \n        deleteTodo={this.deleteTodo.bind(this)}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}